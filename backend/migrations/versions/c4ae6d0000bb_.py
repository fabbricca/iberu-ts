"""empty message

Revision ID: c4ae6d0000bb
Revises: 
Create Date: 2023-07-18 15:55:20.209061

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c4ae6d0000bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('symbol', sa.String(length=5), nullable=True),
    sa.Column('icon', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('country',
    sa.Column('name', sa.String(length=48), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('exchange',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('spot_taker', sa.Float(), nullable=True),
    sa.Column('spot_maker', sa.Float(), nullable=True),
    sa.Column('margin_taker', sa.Float(), nullable=True),
    sa.Column('margin_maker', sa.Float(), nullable=True),
    sa.Column('future_taker', sa.Float(), nullable=True),
    sa.Column('future_maker', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('indicator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('external_chart', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candlestick',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=True),
    sa.Column('timestamp', sa.Integer(), nullable=True),
    sa.Column('timeframe', sa.Integer(), nullable=True),
    sa.Column('open', sa.Float(), nullable=True),
    sa.Column('high', sa.Float(), nullable=True),
    sa.Column('low', sa.Float(), nullable=True),
    sa.Column('close', sa.Float(), nullable=True),
    sa.Column('volume', sa.Float(), nullable=True),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('countryexchange',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spot', sa.Boolean(), nullable=True),
    sa.Column('margin', sa.Boolean(), nullable=True),
    sa.Column('future', sa.Boolean(), nullable=True),
    sa.Column('country_name', sa.String(length=32), nullable=True),
    sa.Column('exchange_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_name'], ['country.name'], ),
    sa.ForeignKeyConstraint(['exchange_id'], ['exchange.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('surname', sa.String(length=32), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=12), nullable=True),
    sa.Column('discord', sa.String(length=32), nullable=True),
    sa.Column('authenticated', sa.Boolean(), nullable=True),
    sa.Column('token', sa.BigInteger(), nullable=True),
    sa.Column('invite', sa.Integer(), nullable=True),
    sa.Column('country_name', sa.String(length=32), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['country_name'], ['country.name'], ),
    sa.ForeignKeyConstraint(['invite'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('db_username', sa.String(length=32), nullable=True),
    sa.Column('db_password', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('api_key_hash', sa.String(length=256), nullable=True),
    sa.Column('api_secret_hash', sa.String(length=256), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('exchange_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exchange_id'], ['exchange.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('indicatorcolor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(length=10), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('indicator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicator.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('creator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=48), nullable=True),
    sa.Column('iban', sa.String(length=48), nullable=True),
    sa.Column('crypto_address', sa.String(length=96), nullable=True),
    sa.Column('authenticator', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['authenticator'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('description', sa.String(length=4096), nullable=True),
    sa.Column('created_timestamp', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('authenticator', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['authenticator'], ['admin.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('backtest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_range', sa.Integer(), nullable=True),
    sa.Column('frequency', sa.Float(), nullable=True),
    sa.Column('winrate', sa.Float(), nullable=True),
    sa.Column('rate_of_return', sa.Float(), nullable=True),
    sa.Column('holding_period', sa.Float(), nullable=True),
    sa.Column('average_win', sa.Float(), nullable=True),
    sa.Column('average_loss', sa.Float(), nullable=True),
    sa.Column('sharpe_ratio', sa.Float(), nullable=True),
    sa.Column('maximum_drawdown', sa.Float(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('max_shares', sa.Float(), nullable=True),
    sa.Column('pdf', sa.String(length=256), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Boolean(), nullable=True),
    sa.Column('open_timestamp', sa.Integer(), nullable=True),
    sa.Column('close_timestamp', sa.Integer(), nullable=True),
    sa.Column('open_value', sa.Float(), nullable=True),
    sa.Column('take_profit', sa.Float(), nullable=True),
    sa.Column('stop_loss', sa.Float(), nullable=True),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.Column('open_candlestick_id', sa.Integer(), nullable=True),
    sa.Column('close_candlestick_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['close_candlestick_id'], ['candlestick.id'], ),
    sa.ForeignKeyConstraint(['open_candlestick_id'], ['candlestick.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('promo', sa.String(length=16), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strategy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fee', sa.Float(), nullable=True),
    sa.Column('trading_type', sa.String(length=20), nullable=True),
    sa.Column('leverage', sa.Integer(), nullable=True),
    sa.Column('time_range', sa.Integer(), nullable=True),
    sa.Column('frequency', sa.Float(), nullable=True),
    sa.Column('winrate', sa.Float(), nullable=True),
    sa.Column('rate_of_return', sa.Float(), nullable=True),
    sa.Column('holding_period', sa.Float(), nullable=True),
    sa.Column('average_win', sa.Float(), nullable=True),
    sa.Column('average_loss', sa.Float(), nullable=True),
    sa.Column('sharpe_ratio', sa.Float(), nullable=True),
    sa.Column('maximum_drawdown', sa.Float(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('max_shares', sa.Float(), nullable=True),
    sa.Column('source_code', sa.String(length=256), nullable=True),
    sa.Column('updated', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('telegram', sa.String(length=64), nullable=True),
    sa.Column('discord', sa.String(length=64), nullable=True),
    sa.Column('backtest_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['backtest_id'], ['backtest.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['creator.id'], ),
    sa.ForeignKeyConstraint(['id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_timestamp', sa.Integer(), nullable=True),
    sa.Column('unsubscription_timestamp', sa.Integer(), nullable=True),
    sa.Column('auto_renewal', sa.Boolean(), nullable=True),
    sa.Column('preferred_leverage', sa.Integer(), nullable=True),
    sa.Column('color', sa.String(length=10), nullable=True),
    sa.Column('api_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['api_id'], ['api.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strategyasset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strategyindicator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parameter', sa.String(length=128), nullable=True),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('indicator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicator.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('strategyindicator')
    op.drop_table('strategyasset')
    op.drop_table('subscription')
    op.drop_table('strategy')
    op.drop_table('transaction')
    op.drop_table('trade')
    op.drop_table('backtest')
    op.drop_table('product')
    op.drop_table('creator')
    op.drop_table('indicatorcolor')
    op.drop_table('api')
    op.drop_table('admin')
    op.drop_table('user')
    op.drop_table('countryexchange')
    op.drop_table('candlestick')
    op.drop_table('indicator')
    op.drop_table('exchange')
    op.drop_table('country')
    op.drop_table('asset')
    # ### end Alembic commands ###
